<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="EC2AMAZ-6D3ISV7" failures="0" tests="1" name="Default test" time="8.242" errors="0" timestamp="2022-04-16T15:32:57 UTC">
  <testcase classname="BaseModel.BaseClass" name="@BeforeTest setup" time="8.155">
    <failure type="java.lang.IllegalStateException" message="The path to the driver executable must be set by the webdriver.edge.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/MicrosoftWebDriver. The latest version can be downloaded from http://go.microsoft.com/fwlink/?LinkId=619687">
      <![CDATA[java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.edge.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/MicrosoftWebDriver. The latest version can be downloaded from http://go.microsoft.com/fwlink/?LinkId=619687
at com.google.common.base.Preconditions.checkState(Preconditions.java:847)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:134)
at org.openqa.selenium.edge.EdgeDriverService.access$000(EdgeDriverService.java:37)
at org.openqa.selenium.edge.EdgeDriverService$Builder.findDefaultExecutable(EdgeDriverService.java:90)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:355)
at org.openqa.selenium.edge.EdgeDriverService.createDefaultService(EdgeDriverService.java:70)
at org.openqa.selenium.edge.EdgeDriver.<init>(EdgeDriver.java:96)
at BaseModel.BaseClass.setup(BaseClass.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:637)
at org.testng.TestRunner.beforeRun(TestRunner.java:627)
at org.testng.TestRunner.run(TestRunner.java:589)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeTest setup -->
  <testcase classname="BaseModel.BaseClass" name="@BeforeClass Synchronize" time="-1.650123177837E9">
    <skipped/>
  </testcase> <!-- @BeforeClass Synchronize -->
  <testcase classname="BaseModel.BaseClass" name="@BeforeMethod BrowserConfig" time="-1.650123177848E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod BrowserConfig -->
  <testcase classname="BaseModel.BaseClass" name="@AfterMethod validations" time="-1.650123177859E9">
    <skipped/>
  </testcase> <!-- @AfterMethod validations -->
  <testcase classname="BaseModel.BaseClass" name="@AfterClass PageValidations" time="-1.650123177863E9">
    <skipped/>
  </testcase> <!-- @AfterClass PageValidations -->
  <testcase classname="BaseModel.BaseClass" name="@AfterTest BrowserClosing" time="-1.650123177866E9">
    <skipped/>
  </testcase> <!-- @AfterTest BrowserClosing -->
  <testcase classname="Sprint1.Day2" name="Authenficate" time="0.0">
    <skipped/>
  </testcase> <!-- Authenficate -->
</testsuite> <!-- Default test -->
